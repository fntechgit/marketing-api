"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# https://github.com/sklarsa/django-sendgrid-v5
SENDGRID_API_KEY = os.getenv('SENDGRID_API_KEY')
EMAIL_BACKEND = "sendgrid_backend.SendgridBackend"

FROM_EMAIL = os.getenv("FROM_EMAIL")
# https://docs.djangoproject.com/en/3.0/howto/error-reporting/
ADMINS = os.getenv('ADMINS')

# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'corsheaders',
    'model_utils',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',
    'api.apps.ApiConfig',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# https://docs.djangoproject.com/en/3.0/ref/settings/#std:setting-ROOT_URLCONF
ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': os.getenv("DB_ENGINE"),
        'NAME':os.getenv("DB_NAME"),
        'USER': os.getenv("DB_USER"),
        'PASSWORD': os.getenv("DB_PASSWORD"),
        'HOST':  os.getenv("DB_HOST"),
        'PORT':  os.getenv("DB_PORT"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")
APPEND_SLASH = False

# file upload
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

CORS_ORIGIN_ALLOW_ALL = True

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": os.getenv("REDIS_LOCATION"),
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": os.getenv("REDIS_PASSWORD")
        },
        "KEY_PREFIX": "marketing_api"
    }
}

# https://docs.djangoproject.com/en/3.0/topics/logging/
# logging

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
            'console': {
                # exact format is not important, this is the minimum information
                'format': '%(asctime)s %(name)-12s %(levelname)-8s %(message)s',
            },
            'file': {
                # exact format is not important, this is the minimum information
                'format': '%(asctime)s %(name)-12s %(levelname)-8s %(message)s',
            },
     },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'console',
        },
        'file': {
            'level': 'DEBUG',
            'formatter': 'file',
            'class': 'logging.FileHandler',
            'filename':  os.path.join(BASE_DIR, "web.log"),
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'include_html': True,
            'email_backend' : 'sendgrid_backend.SendgridBackend',
        }
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'api': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'oauth2': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'cronjobs': {
            'handlers': ['file', 'console'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'test': {
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

REST_FRAMEWORK = {
    #'EXCEPTION_HANDLER': 'api.exceptions.custom_exception_handler',
    #'DEFAULT_AUTHENTICATION_CLASSES': (
    #    'api.jwt.CustomJSONWebTokenAuthentication',
    #    'rest_framework.authentication.SessionAuthentication',
    #    'rest_framework.authentication.BasicAuthentication',
    #),
    #'DEFAULT_RENDERER_CLASSES': (
    #    'rest_framework.renderers.JSONRenderer',
    #),
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
    'DEFAULT_PERMISSION_CLASSES': [
        # default one
        'rest_framework.permissions.AllowAny',
    ],
    'SEARCH_PARAM': 'filter',
    'ORDERING_PARAM': 'order',
    'DEFAULT_VERSIONING_CLASS': 'rest_framework.versioning.URLPathVersioning',
    'DEFAULT_PAGINATION_CLASS': 'api.utils.pagination.LargeResultsSetPagination',
    'PAGE_SIZE': 100,
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '1000/min',
        'user': '10000/min'
    }
}

# https://docs.djangoproject.com/en/3.0/ref/settings/
LOCALE_PATHS = [
    os.path.join(BASE_DIR, "api/locale")
]

DEFAULT_FILE_STORAGE = 'api.utils.storage.SwiftStorage'

# SWIFT
SWIFT_BASE_URL = os.getenv("SWIFT_BASE_URL")
SWIFT_AUTH_URL = os.getenv("SWIFT_AUTH_URL")
SWIFT_APP_CRED_ID = os.getenv("SWIFT_APP_CRED_ID")
SWIFT_APP_CRED_SECRET = os.getenv("SWIFT_APP_CRED_SECRET")
SWIFT_PROJECT_ID = os.getenv("SWIFT_PROJECT_ID")
SWIFT_PROJECT_NAME = os.getenv("SWIFT_PROJECT_NAME")
SWIFT_REGION_NAME = os.getenv("SWIFT_REGION_NAME")
SWIFT_CONTAINER_NAME = os.getenv("SWIFT_CONTAINER_NAME")

OAUTH2_IDP_BASE_URL = os.getenv('OAUTH2_IDP_BASE_URL')
OAUTH2_CLIENT_ID = os.getenv('OAUTH2_CLIENT_ID')
OAUTH2_CLIENT_SECRET = os.getenv('OAUTH2_CLIENT_SECRET')

OAUTH2_ADD_SCOPE = os.getenv('OAUTH2_ADD_SCOPE')
OAUTH2_UPDATE_SCOPE = os.getenv('OAUTH2_UPDATE_SCOPE')
OAUTH2_DELETE_SCOPE = os.getenv('OAUTH2_DELETE_SCOPE')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "backend/media"),
]

# Import local settings
try:
    from .settings_local import *
except ImportError:
    print("Notice: Didn't import settings_local.")

